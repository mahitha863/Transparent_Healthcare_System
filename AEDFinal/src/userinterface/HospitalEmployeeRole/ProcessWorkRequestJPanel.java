/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalEmployeeRole;

import Business.WorkQueue.BookAppointmentWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */


public class ProcessWorkRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    BookAppointmentWorkRequest request;
    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public ProcessWorkRequestJPanel(JPanel userProcessContainer, BookAppointmentWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        
        hospNameJTextField.setText(request.getHospitalName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        bookAppointButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        hospNameJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        doctorTxtField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        appTimeTxtField = new javax.swing.JTextField();
        appDateChooser = new com.toedter.calendar.JDateChooser();
        amRadioBtn = new javax.swing.JRadioButton();
        pmRadioBtn = new javax.swing.JRadioButton();
        dctNameErrorField = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 204));

        bookAppointButton.setText("Book Appointment");
        bookAppointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAppointButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Hospital Name:");

        hospNameJTextField.setEnabled(false);

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Doctor Name:");

        doctorTxtField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                doctorTxtFieldFocusLost(evt);
            }
        });
        doctorTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorTxtFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Appointment Date:");

        jLabel4.setText("Appointment Time:");

        appTimeTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appTimeTxtFieldActionPerformed(evt);
            }
        });

        buttonGroup1.add(amRadioBtn);
        amRadioBtn.setText("AM");

        buttonGroup1.add(pmRadioBtn);
        pmRadioBtn.setText("PM");

        dctNameErrorField.setForeground(java.awt.Color.red);
        dctNameErrorField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dctNameErrorFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(appTimeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amRadioBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pmRadioBtn))
                    .addComponent(appDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(doctorTxtField)
                    .addComponent(hospNameJTextField))
                .addGap(56, 56, 56)
                .addComponent(dctNameErrorField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(backJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bookAppointButton)
                .addGap(128, 128, 128))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(hospNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(doctorTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dctNameErrorField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(appDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(appTimeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amRadioBtn)
                    .addComponent(pmRadioBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookAppointButton)
                    .addComponent(backJButton))
                .addGap(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        HospEmployeeWorkAreaJPanel hejp = (HospEmployeeWorkAreaJPanel) component;
        hejp.populateTable();
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void bookAppointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAppointButtonActionPerformed
        
        if(doctorTxtField.getText().isEmpty() || appDateChooser.getDate().toString().isEmpty()
                || appTimeTxtField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter all the fields");
            return;
        }
        
        
        request.setDoctor(doctorTxtField.getText());
        
        //appDateChooser.setDateFormatString("dd/MM/yyyy");
        DateFormat df = new SimpleDateFormat("MMM d, yyyy");
        String date = df.format(appDateChooser.getDate());
        System.out.println(date);
        request.setDate(date);
        
        // validation for time
        try{
          int time = Integer.parseInt(appTimeTxtField.getText());
          if(time>12){
              JOptionPane.showMessageDialog(null, "Please enter valid time", "Error", JOptionPane.ERROR_MESSAGE);
            appTimeTxtField.setText("");
            return;
          }
        }catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Please enter valid time", "Error", JOptionPane.ERROR_MESSAGE);
            appTimeTxtField.setText("");
            return;
        }
        String timeSelected = "";
        if(amRadioBtn.isSelected())  timeSelected = appTimeTxtField.getText() + " AM";
        else if(pmRadioBtn.isSelected())  timeSelected = appTimeTxtField.getText() + " PM";
        else{
            JOptionPane.showConfirmDialog(null, "Please select either AM or PM for the time", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        request.setTime(timeSelected);
        request.setStatus("Completed");
        request.setInfoResult("Apointment Booked");
        
        JOptionPane.showMessageDialog(null, "Appointment is successfully booked for "+ 
                request.getSender().getEmployee().getName() + " in "+ request.getHospitalName());  
        
        doctorTxtField.setEnabled(false);
        appDateChooser.setEnabled(false);
        appTimeTxtField.setEnabled(false);
        
    }//GEN-LAST:event_bookAppointButtonActionPerformed

    private void doctorTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorTxtFieldActionPerformed

    private void appTimeTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appTimeTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_appTimeTxtFieldActionPerformed

    private void dctNameErrorFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dctNameErrorFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_dctNameErrorFieldFocusLost

    private void doctorTxtFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_doctorTxtFieldFocusLost
        // TODO add your handling code here:
         String regex = "^[a-zA-Z]*$";
        
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(doctorTxtField.getText());
        
        if(matcher.matches())
        {
            bookAppointButton.setEnabled(true);
            dctNameErrorField.setText("");
        }else{
            bookAppointButton.setEnabled(false);
            dctNameErrorField.setText("Please enter valid doctor name.");
        }
    }//GEN-LAST:event_doctorTxtFieldFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton amRadioBtn;
    private com.toedter.calendar.JDateChooser appDateChooser;
    private javax.swing.JTextField appTimeTxtField;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton bookAppointButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel dctNameErrorField;
    private javax.swing.JTextField doctorTxtField;
    private javax.swing.JTextField hospNameJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton pmRadioBtn;
    // End of variables declaration//GEN-END:variables
}
